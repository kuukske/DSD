-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions
-- and other software and tools, and its AMPP partner logic
-- functions, and any output files from any of the foregoing
-- (including device programming or simulation files), and any
-- associated documentation or information are expressly subject
-- to the terms and conditions of the Intel Program License
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.


-- Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
-- Created on Tue Nov 27 16:16:56 2018

--Bram Kuijk
--Fontys Engineering

LIBRARY ieee;
USE ieee.std_logic_1164.all;


--  Entity Declaration

ENTITY load_1 IS PORT(
	d		:	IN STD_LOGIC_VECTOR(7 DOWNTO 0); 	--8 BIT INPUT
	clk	: 	IN STD_LOGIC;								--CLK INPUT
	ld		:	IN STD_LOGIC;								--LOAD INPUT
	q		:	OUT STD_LOGIC_VECTOR(7 DOWNTO 0)		--8 BIT OUTPUT
);
END load_1;


--  Architecture Body

ARCHITECTURE load_1_architecture OF load_1 IS


BEGIN
	process(clk)
	begin
		if rising_edge(clk) then
			if ld = '1' then			--if load = '1', output <= input
				q <= d;
			end if;
		end if;
	end process;

END load_1_architecture;
